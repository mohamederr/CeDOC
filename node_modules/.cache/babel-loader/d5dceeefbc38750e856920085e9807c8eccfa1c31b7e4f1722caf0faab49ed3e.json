{"ast":null,"code":"import api from './api';\n\n// Récupérer toutes les candidatures pour le professeur connecté\nexport const getCandidatures = async () => {\n  try {\n    const response = await api.get('/api/professeurs/candidatures');\n    return response.data;\n  } catch (error) {\n    console.error('Erreur lors de la récupération des candidatures:', error);\n    throw error;\n  }\n};\n\n// Télécharger le dossier d'un candidat\nexport const downloadDossier = async candidatureId => {\n  try {\n    const response = await api.get(`/api/candidatures/${candidatureId}/dossier`, {\n      responseType: 'blob' // Important pour les fichiers\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Erreur lors du téléchargement du dossier:', error);\n    throw error;\n  }\n};\n\n// Planifier un entretien\nexport const planifierEntretien = async (candidatureId, dateEntretien) => {\n  try {\n    const response = await api.post(`/api/candidatures/${candidatureId}/entretien`, {\n      dateEntretien\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Erreur lors de la planification de l\\'entretien:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["api","getCandidatures","response","get","data","error","console","downloadDossier","candidatureId","responseType","planifierEntretien","dateEntretien","post"],"sources":["C:/Users/HP/projectDoc/inpt-centre-etudes-doctorales/src/services/candidatureService.js"],"sourcesContent":["import api from './api';\r\n\r\n// Récupérer toutes les candidatures pour le professeur connecté\r\nexport const getCandidatures = async () => {\r\n  try {\r\n    const response = await api.get('/api/professeurs/candidatures');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Erreur lors de la récupération des candidatures:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Télécharger le dossier d'un candidat\r\nexport const downloadDossier = async (candidatureId) => {\r\n  try {\r\n    const response = await api.get(`/api/candidatures/${candidatureId}/dossier`, {\r\n      responseType: 'blob', // Important pour les fichiers\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Erreur lors du téléchargement du dossier:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Planifier un entretien\r\nexport const planifierEntretien = async (candidatureId, dateEntretien) => {\r\n  try {\r\n    const response = await api.post(`/api/candidatures/${candidatureId}/entretien`, {\r\n      dateEntretien,\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Erreur lors de la planification de l\\'entretien:', error);\r\n    throw error;\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;;AAEvB;AACA,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;EACzC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,+BAA+B,CAAC;IAC/D,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kDAAkD,EAAEA,KAAK,CAAC;IACxE,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,eAAe,GAAG,MAAOC,aAAa,IAAK;EACtD,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,qBAAqBK,aAAa,UAAU,EAAE;MAC3EC,YAAY,EAAE,MAAM,CAAE;IACxB,CAAC,CAAC;IACF,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;IACjE,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMK,kBAAkB,GAAG,MAAAA,CAAOF,aAAa,EAAEG,aAAa,KAAK;EACxE,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMF,GAAG,CAACY,IAAI,CAAC,qBAAqBJ,aAAa,YAAY,EAAE;MAC9EG;IACF,CAAC,CAAC;IACF,OAAOT,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kDAAkD,EAAEA,KAAK,CAAC;IACxE,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}